// <auto-generated />
using System;
using CRM_CMC.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM_CMC.Migrations
{
    [DbContext(typeof(BACKEND_CRMContext))]
    partial class BACKEND_CRMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRM_CMC.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("ChiTietDonHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChiTietDonHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietDonHangId"), 1L, 1);

                    b.Property<string>("DanhSachMaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LichSuMuaHangId")
                        .HasColumnType("int")
                        .HasColumnName("LichSuMuaHangID");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("SoLuongSanPham")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Tien1LoaiSanPham")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ChiTietDonHangId");

                    b.HasIndex("LichSuMuaHangId");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.ChiTietKhoHang", b =>
                {
                    b.Property<int>("ChiTietKhoHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChiTietKhoHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietKhoHangId"), 1L, 1);

                    b.Property<DateTime?>("HanSuDung")
                        .HasColumnType("datetime");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgaySanXuat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayXuat")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("SoLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ChiTietKhoHangId");

                    b.HasIndex("MaLoaiSanPham");

                    b.HasIndex(new[] { "MaSanPham" }, "UQ__ChiTietK__FAC7442C1CBB82E0")
                        .IsUnique()
                        .HasFilter("[MaSanPham] IS NOT NULL");

                    b.ToTable("ChiTietKhoHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.HoTroBanHang", b =>
                {
                    b.Property<int>("HoTroBanHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HoTroBanHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoTroBanHangId"), 1L, 1);

                    b.Property<string>("GiaiDoanBanHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KhachHangID");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.HasKey("HoTroBanHangId");

                    b.ToTable("HoTroBanHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.KhachHang", b =>
                {
                    b.Property<int>("KhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhachHangId"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LoaiTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTaoTaiKhoan")
                        .HasColumnType("datetime");

                    b.Property<string>("NhanVienChamSoc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SoDienThoai")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenTaiKhoan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("TokenDangNhap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrangThaiTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("KhachHangId");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.KhoHang", b =>
                {
                    b.Property<int>("KhoHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KhoHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoHangId"), 1L, 1);

                    b.Property<string>("DonVi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaKhoHang")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaCungCap")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ThuongHieu")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("KhoHangId");

                    b.HasIndex(new[] { "MaLoaiSanPham" }, "UQ__KhoHang__ECCF699E05C9017C")
                        .IsUnique();

                    b.ToTable("KhoHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.LichSuMuaHang", b =>
                {
                    b.Property<int>("LichSuMuaHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LichSuMuaHangID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichSuMuaHangId"), 1L, 1);

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ThoiGianMua")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LichSuMuaHangId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("LichSuMuaHang", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.LichSuTuongTac", b =>
                {
                    b.Property<int>("LichSuTuongTacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LichSuTuongTacID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichSuTuongTacId"), 1L, 1);

                    b.Property<string>("DanhSachMaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetQua")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<string>("LoaiTuongTac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    b.Property<string>("NoiDungTuongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianTuongTac")
                        .HasColumnType("datetime");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LichSuTuongTacId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("LichSuTuongTac", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("locationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("LocationId");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.NhanVien", b =>
                {
                    b.Property<int>("NhanVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NhanVienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NhanVienId"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LoaiTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTaoTaiKhoan")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoDienThoai")
                        .HasColumnType("int");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenTaiKhoan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("TokenDangNhap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrangThaiTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VaiTro")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("NhanVienId");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.PhanLoaiKhachHang", b =>
                {
                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HạngMuaHàng")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("Hạng mua hàng");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<string>("LoaiTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTaoTaiKhoan")
                        .HasColumnType("datetime");

                    b.Property<string>("NhanVienChamSoc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SoDienThoai")
                        .HasColumnType("int");

                    b.Property<int?>("SoLanMuaHang")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenTaiKhoan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("TokenDangNhap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TongChiTieu")
                        .HasColumnType("decimal(38,2)");

                    b.Property<string>("TrangThaiTaiKhoan")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("PhanLoaiKhachHang");
                });

            modelBuilder.Entity("CRM_CMC.Models.QuanLiKhoHang", b =>
                {
                    b.Property<string>("DanhSachMaSanPham")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("DonVi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KhoHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhoHangID");

                    b.Property<string>("MaKhoHang")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaLoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaCungCap")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SoLuongNhap")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongXuat")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ThuongHieu")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("QuanLiKhoHang");
                });

            modelBuilder.Entity("CRM_CMC.Models.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CRM_CMC.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("CRM_CMC.Models.LichSuMuaHang", "LichSuMuaHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("LichSuMuaHangId")
                        .IsRequired()
                        .HasConstraintName("FK_LichSuMuaHangID_ChiTietDonHang");

                    b.Navigation("LichSuMuaHang");
                });

            modelBuilder.Entity("CRM_CMC.Models.ChiTietKhoHang", b =>
                {
                    b.HasOne("CRM_CMC.Models.KhoHang", "MaLoaiSanPhamNavigation")
                        .WithMany("ChiTietKhoHangs")
                        .HasForeignKey("MaLoaiSanPham")
                        .HasPrincipalKey("MaLoaiSanPham")
                        .IsRequired()
                        .HasConstraintName("FK_MaLoaiSanPham_ChiTietKhoHang");

                    b.Navigation("MaLoaiSanPhamNavigation");
                });

            modelBuilder.Entity("CRM_CMC.Models.LichSuMuaHang", b =>
                {
                    b.HasOne("CRM_CMC.Models.KhachHang", "KhachHang")
                        .WithMany("LichSuMuaHangs")
                        .HasForeignKey("KhachHangId")
                        .HasConstraintName("FK_KhachHangID_LichSuMuaHang");

                    b.HasOne("CRM_CMC.Models.NhanVien", "NhanVien")
                        .WithMany("LichSuMuaHangs")
                        .HasForeignKey("NhanVienId")
                        .HasConstraintName("FK_NhanVienID_LichSuMuaHang");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CRM_CMC.Models.LichSuTuongTac", b =>
                {
                    b.HasOne("CRM_CMC.Models.KhachHang", "KhachHang")
                        .WithMany("LichSuTuongTacs")
                        .HasForeignKey("KhachHangId")
                        .IsRequired()
                        .HasConstraintName("FK_KhachHangID_LichSuTuongTac");

                    b.HasOne("CRM_CMC.Models.NhanVien", "NhanVien")
                        .WithMany("LichSuTuongTacs")
                        .HasForeignKey("NhanVienId")
                        .IsRequired()
                        .HasConstraintName("FK_NhanVienID_LichSuTuongTac");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CRM_CMC.Models.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CRM_CMC.Models.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_CMC.Models.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CRM_CMC.Models.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CRM_CMC.Models.KhachHang", b =>
                {
                    b.Navigation("LichSuMuaHangs");

                    b.Navigation("LichSuTuongTacs");
                });

            modelBuilder.Entity("CRM_CMC.Models.KhoHang", b =>
                {
                    b.Navigation("ChiTietKhoHangs");
                });

            modelBuilder.Entity("CRM_CMC.Models.LichSuMuaHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("CRM_CMC.Models.NhanVien", b =>
                {
                    b.Navigation("LichSuMuaHangs");

                    b.Navigation("LichSuTuongTacs");
                });
#pragma warning restore 612, 618
        }
    }
}
